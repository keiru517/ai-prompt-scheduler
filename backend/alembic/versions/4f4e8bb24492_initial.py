"""initial

Revision ID: 4f4e8bb24492
Revises: 
Create Date: 2025-06-19 01:08:01.659708

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4f4e8bb24492'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('m_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='UserID'),
    sa.Column('phone_number', sa.String(length=255), nullable=False, comment='phone number'),
    sa.Column('first_name', sa.String(length=255), nullable=False, comment='first name'),
    sa.Column('last_name', sa.String(length=255), nullable=False, comment='last name'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True, comment='created date'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True, comment='updated date'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='deleted date'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('t_login_attempts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='login attemp ID'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='userID'),
    sa.Column('login_time', sa.DateTime(), nullable=True, comment='login time'),
    sa.Column('otp', sa.String(length=6), nullable=True, comment='otp'),
    sa.Column('otp_verified', sa.Boolean(), nullable=False, comment='OTP Verify State'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True, comment='created date'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True, comment='updated date'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='deleted date'),
    sa.ForeignKeyConstraint(['user_id'], ['m_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_t_login_attempts_id'), 't_login_attempts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_t_login_attempts_id'), table_name='t_login_attempts')
    op.drop_table('t_login_attempts')
    op.drop_table('m_users')
    # ### end Alembic commands ###
